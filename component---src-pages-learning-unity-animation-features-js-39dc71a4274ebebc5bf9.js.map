{"version":3,"sources":["webpack:///./src/components/Image/TestImg.jsx","webpack:///./src/components/Projects/TestList.jsx","webpack:///./src/mock/Learning_Unity_Animation_Features_data.js","webpack:///./src/components/App_Learning_Unity_Animation_Features.jsx","webpack:///./src/pages/learning-unity-animation-features.js","webpack:///./src/components/About/About_Project_Item.jsx","webpack:///./src/components/Image/ProjectImg.jsx","webpack:///./src/components/Footer/Footer_Project.jsx"],"names":["ProjectImg","filename","alt","query","render","data","images","edges","find","n","node","relativePath","includes","console","log","substring","length","src","require","style","maxWidth","maxHeight","href","target","Projects","projects","useContext","PortfolioContext","useState","isDesktop","setIsDesktop","isMobile","setIsMobile","useEffect","window","innerWidth","id","Container","className","map","project","title","info","info2","url","repo","img","Row","key","Col","lg","sm","left","bottom","duration","delay","distance","rel","right","aria-label","options","reverse","max","perspective","scale","speed","transition","axis","reset","easing","data-tilt","TestImg","to","heroData","name","subtitle","cta","aboutData","paragraphOne","paragraphTwo","paragraphThree","resume","projectsData","nanoid","contactData","btn","email","footerData","networks","App","hero","setHero","about","setAbout","setProjects","contact","setContact","footer","setFooter","value","headData","lang","description","Helmet","charSet","content","About","width","height","frameborder","allow","allowfullscreen","Footer","isEnabled","githubButtons","smooth","aria-hidden","network"],"mappings":"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","file":"component---src-pages-learning-unity-animation-features-js-39dc71a4274ebebc5bf9.js","sourcesContent":["import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport '../../Imports/ImportGifs';\n\nconst ProjectImg = ({ filename, alt }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        images: allFile {\n          edges {\n            node {\n              relativePath\n              name\n              childImageSharp {\n                fluid(maxWidth: 1366) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data) => {\n      const image = data.images.edges.find((n) => n.node.relativePath.includes(filename));\n      // if (!image) return null;\n      console.log(filename);\n\n      var file_extention = filename.substring(filename.length - 4, filename.length);\n      switch (file_extention) {\n        case '.jpg':\n        case '.png':\n        case '.gif':\n          return (\n            <img\n              src={require('../../images/' + filename)}\n              style={{ maxWidth: 600, maxHeight: 400 }}\n            />\n          );\n        default:\n          <iframe\n            width=\"560\"\n            height=\"315\"\n            src={filename}\n            frameborder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowfullscreen\n          >\n            name = \"iframe_video1\"\n          </iframe>;\n          return (\n            <a href=\"<%=video1[2]%>\" target=\"iframe_video1\">\n              <img src=\"Amu Concept Art.png\" />\n            </a>\n          );\n      }\n    }}\n  />\n);\n\nProjectImg.propTypes = {\n  filename: PropTypes.string,\n  alt: PropTypes.string,\n};\n\nexport default ProjectImg;\n","import React, { useContext, useEffect, useState } from 'react';\nimport Fade from 'react-reveal/Fade';\nimport Tilt from 'react-tilt';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Link } from 'gatsby';\nimport PortfolioContext from '../../context/context';\nimport Title from '../Title/Title';\nimport TestImg from '../Image/TestImg';\n\nconst Projects = () => {\n  const { projects } = useContext(PortfolioContext);\n\n  const [isDesktop, setIsDesktop] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    if (window.innerWidth > 769) {\n      setIsDesktop(true);\n      setIsMobile(false);\n    } else {\n      setIsMobile(true);\n      setIsDesktop(false);\n    }\n  }, []);\n\n  return (\n    <section id=\"projects\">\n      <Container>\n        <div className=\"project-wrapper\">\n          {projects.map((project) => {\n            const { title, info, info2, url, repo, img, id } = project;\n\n            return (\n              <Row key={id}>\n                <Col lg={4} sm={12}>\n                  <Fade\n                    left={isDesktop}\n                    bottom={isMobile}\n                    duration={1000}\n                    delay={500}\n                    distance=\"30px\"\n                  >\n                    <div className=\"project-wrapper__text\">\n                      <h3 className=\"project-wrapper__text-title\">{title || 'Project Title'}</h3>\n                      <div>\n                        <p>{info || ''}</p>\n                        <p className=\"mb-4\">{info2 || ''}</p>\n                      </div>\n                      <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"cta-btn cta-btn--hero\"\n                        href={url || '#!'}\n                      >\n                        See Live\n                      </a>\n\n                      {repo && (\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"cta-btn text-color-main\"\n                          href={repo}\n                        >\n                          Source Code\n                        </a>\n                      )}\n                    </div>\n                  </Fade>\n                </Col>\n                <Col lg={8} sm={12}>\n                  <Fade\n                    right={isDesktop}\n                    bottom={isMobile}\n                    duration={1000}\n                    delay={1000}\n                    distance=\"30px\"\n                  >\n                    <div className=\"project-wrapper__image\">\n                      <a\n                        href={url || '#!'}\n                        target=\"_blank\"\n                        aria-label=\"Project Link\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        <Tilt\n                          options={{\n                            reverse: false,\n                            max: 8,\n                            perspective: 1000,\n                            scale: 1,\n                            speed: 300,\n                            transition: true,\n                            axis: null,\n                            reset: true,\n                            easing: 'cubic-bezier(.03,.98,.52,.99)',\n                          }}\n                        >\n                          <div data-tilt className=\"thumbnail rounded\">\n                            <TestImg alt={title} filename={img} />\n                          </div>\n                        </Tilt>\n                      </a>\n                    </div>\n                  </Fade>\n                </Col>\n              </Row>\n            );\n          })}\n          <div>\n            <Link to=\"../\" className=\"cta-btn cta-btn--hero\">\n              Return to main page\n            </Link>\n          </div>\n        </div>\n      </Container>\n    </section>\n  );\n};\n\nexport default Projects;\n","import { nanoid } from 'nanoid';\n\n// HEAD DATA\nexport const headData = {\n  title: 'Margaret Riese | Computer Engineer', // e.g: 'Name | Developer'\n  lang: 'en', // e.g: en, es, fr, jp\n  description: 'Margaret Riese Portfolio Website', // e.g: Welcome to my website\n};\n\n// // HERO DATA\nexport const heroData = {\n  title: '',\n  name: 'Margaret Riese',\n  subtitle: 'Computer Engineer',\n  cta: '',\n};\n\n// ABOUT DATA\nexport const aboutData = {\n  img: 'Work_Photo.jpg',\n  paragraphOne: 'Learning Unity Animation Features',\n  paragraphTwo:\n    \"I have recently been learning how to use Unity's animation features. Check out my progress!\",\n  paragraphThree: '',\n  resume: 'https://drive.google.com/file/d/13_lCtgol_VL0ybbYB13QqvnAUJ7H592x/view?usp=sharing', // if no resume, the button will not show up\n};\n\n// PROJECTS DATA\nexport const projectsData = [\n  {\n    id: nanoid(),\n    img: 'Animation Layers.gif',\n    title: 'Animation Layers',\n    info:\n      'By creating an mask of the humanoid rig, a separate animation can be used for different parts of the body. ',\n    info2:\n      'An example of this would be using an upper body mask for an idle pistol holding animation while the lower body continues to play a walking or running animation.',\n    url: '',\n    repo: '', // if no repo, the button will not show up\n  },\n  {\n    id: nanoid(),\n    img: 'Animation Retargetting Before.gif',\n    title: 'Animation Retargetting Before',\n    info:\n      'When starting to retarget animations to other characters, because the animations were not mapped to humanoid characters, there were some unexpected results...',\n    info2: '',\n    url: '',\n    repo: '', // if no repo, the button will not show up\n  },\n  {\n    id: nanoid(),\n    img: 'Animation Retargetting After.gif',\n    title: 'Animation Retargetting After',\n    info:\n      \"After mapping all the animations to be humanoid using Unity's humanoid animation retargetting system, the animations work as expected for all humanoid rigs.\",\n    info2: '',\n    url: '',\n    repo: '', // if no repo, the button will not show up\n  },\n  {\n    id: nanoid(),\n    img: '2D Blend Trees.gif',\n    title: '2D Blend Trees',\n    info:\n      'The walking and running animations are now blended with a right strafe and left strafe animation depending on the velocity float in the Z direction.',\n    info2:\n      \"The X and Z velocities are locked and reset at 0.5f for walking and 2.0f for running based on whether the 'shift' key is being pressed.\",\n    url: '',\n    repo:\n      'https://github.com/mkiuur/Learning-Unity-Animation-Features/blob/main/twoDimensionalAnimationStateController.cs', // if no repo, the button will not show up\n  },\n  {\n    id: nanoid(),\n    img: '1D Blend Trees.gif',\n    title: '1D Blend Trees',\n    info:\n      \"The animations for walking and running are blended together based on a float value for velocity in the X direction. The longer 'w' is pressed, the greater the velocity.\",\n    info2:\n      'As the velocity increases, the running animation will be further blended into the walking animation.',\n    url: '',\n    repo:\n      'https://github.com/mkiuur/Learning-Unity-Animation-Features/blob/main/animationStateControllerBlend.cs', // if no repo, the button will not show up\n  },\n  {\n    id: nanoid(),\n    img: 'Boolean Animation Controller.gif',\n    title: 'Boolean Animation Controller',\n    info:\n      \"Animations are changed based on boolean values. e.g. if 'w' is pressed, she will walk, if 'shift' is pressed, she will run.\",\n    info2: 'Switching between walking and running animations is immediate and choppy looking.',\n    url: '',\n    repo:\n      'https://github.com/mkiuur/Learning-Unity-Animation-Features/blob/main/animationStateController.cs', // if no repo, the button will not show up\n  },\n];\n\n// CONTACT DATA\nexport const contactData = {\n  cta: 'mkiuur@gmail.com',\n  btn: \"Let's Talk\",\n  email: 'mkiuur@gmail.com',\n};\n\n// FOOTER DATA\nexport const footerData = {\n  networks: [\n    {\n      id: nanoid(),\n      name: 'linkedin',\n      url: 'https://www.linkedin.com/in/margaret-riese/',\n    },\n    {\n      id: nanoid(),\n      name: 'github',\n      url: 'https://github.com/mkiuur',\n    },\n  ],\n};\n\n// Github start/fork buttons\nexport const githubButtons = {\n  isEnabled: false, // set to false to disable the GitHub stars/fork buttons\n};\n","import React, { useState, useEffect } from 'react';\nimport Hero from './Hero/Hero';\nimport About from './About/About_Project_Item';\nimport Projects from './Projects/TestList';\nimport Contact from './Contact/Contact';\nimport Footer from './Footer/Footer_Project';\n\nimport { PortfolioProvider } from '../context/context';\n\nimport { heroData, aboutData, projectsData, contactData, footerData } from '../mock/Learning_Unity_Animation_Features_data';\n\nfunction App() {\n  const [hero, setHero] = useState({});\n  const [about, setAbout] = useState({});\n  const [projects, setProjects] = useState([]);\n  const [contact, setContact] = useState({});\n  const [footer, setFooter] = useState({});\n\n  useEffect(() => {\n    setHero({ ...heroData });\n    setAbout({ ...aboutData });\n    setProjects([...projectsData]);\n    setContact({ ...contactData });\n    setFooter({ ...footerData });\n  }, []);\n\n  return (\n    <PortfolioProvider value={{ hero, about, projects, contact, footer }}>\n      <About />\n      <Footer />\n    </PortfolioProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport App from '../components/App_Learning_Unity_Animation_Features.jsx';\nimport { headData } from '../mock/data';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../style/main.scss';\n\nexport default () => {\n  const { title, lang, description } = headData;\n\n  return (\n    <>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>{title || 'Margaret Riese Resume Site'}</title>\n        <html lang={lang || 'en'} />\n        <meta name=\"description\" content={description || 'Margaret Riese Resume Site'} />\n      </Helmet>\n      <App />\n    </>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport Fade from 'react-reveal/Fade';\nimport Tilt from 'react-tilt';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Link } from 'gatsby';\nimport PortfolioContext from '../../context/context';\nimport Title from '../Title/Title';\nimport AboutImg from '../Image/AboutImg';\nimport ProjectImg from '../Image/ProjectImg';\n\nconst About = () => {\n  const { projects } = useContext(PortfolioContext);\n  const { about } = useContext(PortfolioContext);\n  const { img, paragraphOne, paragraphTwo, paragraphThree, resume } = about;\n\n  const [isDesktop, setIsDesktop] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    if (window.innerWidth > 769) {\n      setIsDesktop(true);\n      setIsMobile(false);\n    } else {\n      setIsMobile(true);\n      setIsDesktop(false);\n    }\n  }, []);\n\n  return (\n    <section id=\"project_item\">\n      <Container>\n        <Title title={paragraphOne || ''} />\n        <Fade bottom={isDesktop} bottom={isMobile} duration={1000} delay={500} distance=\"30px\">\n          <p className=\"project_item__text\">{paragraphTwo || ''}</p>\n        </Fade>\n        <div className=\"project-wrapper\">\n          {projects.map((project) => {\n            const { title, info, info2, url, repo, img, id } = project;\n\n            return (\n              <Row key={id}>\n                <Col lg={4} sm={12}>\n                  <Fade\n                    left={isDesktop}\n                    bottom={isMobile}\n                    duration={1000}\n                    delay={500}\n                    distance=\"30px\"\n                  >\n                    <div className=\"project-wrapper__text\">\n                      <h1 className=\"project-wrapper__text-title\">{title || 'Project Title'}</h1>\n                      <div>\n                        <p>{info || ''}</p>\n                        <p className=\"mb-4\">{info2 || ''}</p>\n                      </div>\n                      {repo && (\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"cta-btn cta-btn--resume\"\n                          href={repo}\n                        >\n                          Source Code\n                        </a>\n                      )}\n                    </div>\n                  </Fade>\n                </Col>\n                <Col lg={8} sm={12}>\n                  <Fade\n                    right={isDesktop}\n                    bottom={isMobile}\n                    duration={1000}\n                    delay={1000}\n                    distance=\"30px\"\n                  >\n                    <div className=\"project-wrapper__image\">\n                      {/* <a\n                        href={url || '#!'}\n                        target=\"_blank\"\n                        aria-label=\"Project Link\"\n                        rel=\"noopener noreferrer\"\n                      > */}\n                      <Tilt\n                        options={{\n                          reverse: false,\n                          max: 8,\n                          perspective: 1000,\n                          scale: 1,\n                          speed: 300,\n                          transition: true,\n                          axis: null,\n                          reset: true,\n                          easing: 'cubic-bezier(.03,.98,.52,.99)',\n                        }}\n                      >\n                        <div data-tilt className=\"thumbnail rounded\">\n                          <ProjectImg alt={title} filename={img} />\n                        </div>\n                      </Tilt>\n                      {/* </a> */}\n                    </div>\n                  </Fade>\n                  <p>\n                    <h1 className=\"project-wrapper__text-title\">{''}</h1>\n                  </p>\n                </Col>\n              </Row>\n            );\n          })}\n        </div>\n      </Container>\n    </section>\n  );\n};\n\nexport default About;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport '../../Imports/ImportGifs';\n\nconst ProjectImg = ({ filename, alt }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        images: allFile {\n          edges {\n            node {\n              relativePath\n              name\n              childImageSharp {\n                fluid(maxWidth: 1366) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data) => {\n      const image = data.images.edges.find((n) => n.node.relativePath.includes(filename));\n      // if (!image) return null;\n      console.log(filename);\n\n      var file_extention = filename.substring(filename.length - 4, filename.length);\n      switch (file_extention) {\n        case '.jpg':\n        case '.png':\n        case '.gif':\n          return (\n            <img\n              src={require('../../images/' + filename)}\n              style={{ maxWidth: 600, maxHeight: 400 }}\n            />\n          );\n        default:\n          return (\n            <iframe\n              width=\"560\"\n              height=\"315\"\n              src={filename}\n              frameborder=\"0\"\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n              allowfullscreen\n            ></iframe>\n          );\n      }\n    }}\n  />\n);\n\nProjectImg.propTypes = {\n  filename: PropTypes.string,\n  alt: PropTypes.string,\n};\n\nexport default ProjectImg;\n","import React, { useContext } from 'react';\n// import { Container } from 'react-bootstrap';\nimport { Link } from 'gatsby';\nimport PortfolioContext from '../../context/context';\nimport GithubButtons from '../GithubButtons/GithubButtons';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport { githubButtons } from '../../mock/data';\n\nconst Footer = () => {\n  const { footer } = useContext(PortfolioContext);\n  const { networks } = footer;\n  const { isEnabled } = githubButtons;\n\n  return (\n    <footer className=\"footer navbar-static-bottom\">\n      <Container>\n        <span className=\"back-to-top\">\n          <Link to=\"projects\" smooth duration={1000}>\n            <i className=\"fa fa-angle-up fa-2x\" aria-hidden=\"true\" />\n          </Link>\n        </span>\n\n        <Row>\n          <Col></Col>\n          <Col>\n            <div>\n              <Link to={'/'} className=\"cta-btn cta-btn--hero\">\n                Return to main page\n              </Link>\n              {/* <Link href=\"/\" className=\"cta-btn cta-btn--hero\">\n                Return to main page\n              </Link> */}\n            </div>\n          </Col>\n          <Col>\n            <div>\n              <Link to={'/projects'} className=\"cta-btn cta-btn--hero\">\n                Return to projects list\n              </Link>\n              {/* <Link href=\"/projects\" className=\"cta-btn cta-btn--hero\">\n                Return to projects list\n              </Link> */}\n            </div>\n          </Col>\n          <Col></Col>\n        </Row>\n\n        <div className=\"social-links\">\n          {networks &&\n            networks.map((network) => {\n              const { id, name, url } = network;\n              return (\n                <a\n                  key={id}\n                  href={url || 'https://mkiuur.github.io/Github-resume/'}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                  aria-label={name}\n                >\n                  <i className={`fa fa-${name || 'refresh'} fa-inverse`} />\n                </a>\n              );\n            })}\n        </div>\n        <hr />\n        {isEnabled && <GithubButtons />}\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n"],"sourceRoot":""}
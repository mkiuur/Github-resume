{"version":3,"sources":["webpack:///./src/components/Projects/TestList.jsx","webpack:///./src/components/About/About_Project_Item.jsx","webpack:///./src/components/Footer/Footer_Project.jsx","webpack:///./src/mock/knights_and_monsters_data.js","webpack:///./src/components/App_Knights_and_Monsters.jsx","webpack:///./src/pages/knights-and-monsters.js"],"names":["About","projects","useContext","PortfolioContext","about","paragraphOne","img","paragraphTwo","paragraphThree","resume","useState","isDesktop","setIsDesktop","isMobile","setIsMobile","useEffect","window","innerWidth","id","title","bottom","duration","delay","distance","className","map","project","info","info2","repo","url","key","lg","sm","left","target","rel","href","right","options","reverse","max","perspective","scale","speed","transition","axis","reset","easing","data-tilt","alt","filename","Footer","networks","footer","isEnabled","githubButtons","to","smooth","aria-hidden","network","name","aria-label","heroData","subtitle","cta","aboutData","projectsData","nanoid","contactData","btn","email","footerData","App","hero","setHero","setAbout","setProjects","contact","setContact","setFooter","value","headData","lang","description","Helmet","charSet","content"],"mappings":"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","file":"component---src-pages-knights-and-monsters-js-5eef78b33520e8ec52b4.js","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport Fade from 'react-reveal/Fade';\nimport Tilt from 'react-tilt';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Link } from \"gatsby\"\nimport PortfolioContext from '../../context/context';\nimport Title from '../Title/Title';\nimport ProjectImg from '../Image/ProjectImg';\n\nconst Projects = () => {\n  const { projects } = useContext(PortfolioContext);\n\n  const [isDesktop, setIsDesktop] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    if (window.innerWidth > 769) {\n      setIsDesktop(true);\n      setIsMobile(false);\n    } else {\n      setIsMobile(true);\n      setIsDesktop(false);\n    }\n  }, []);\n\n  return (\n    <section id=\"projects\">\n      <Container>\n        <div className=\"project-wrapper\">\n          {projects.map((project) => {\n            const { title, info, info2, url, repo, img, id } = project;\n\n            return (\n              <Row key={id}>\n                <Col lg={4} sm={12}>\n                  <Fade\n                    left={isDesktop}\n                    bottom={isMobile}\n                    duration={1000}\n                    delay={500}\n                    distance=\"30px\"\n                  >\n                    <div className=\"project-wrapper__text\">\n                      <h3 className=\"project-wrapper__text-title\">{title || 'Project Title'}</h3>\n                      <div>\n                        <p>\n                          {info || ''}\n                        </p>\n                        <p className=\"mb-4\">{info2 || ''}</p>\n                      </div>\n                      <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"cta-btn cta-btn--hero\"\n                        href={url || '#!'}\n                      >\n                        See Live\n                      </a>\n\n                      {repo && (\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"cta-btn text-color-main\"\n                          href={repo}\n                        >\n                          Source Code\n                        </a>\n                      )}\n                    </div>\n                  </Fade>\n                </Col>\n                <Col lg={8} sm={12}>\n                  <Fade\n                    right={isDesktop}\n                    bottom={isMobile}\n                    duration={1000}\n                    delay={1000}\n                    distance=\"30px\"\n                  >\n                    <div className=\"project-wrapper__image\">\n                      <a\n                        href={url || '#!'}\n                        target=\"_blank\"\n                        aria-label=\"Project Link\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        <Tilt\n                          options={{\n                            reverse: false,\n                            max: 8,\n                            perspective: 1000,\n                            scale: 1,\n                            speed: 300,\n                            transition: true,\n                            axis: null,\n                            reset: true,\n                            easing: 'cubic-bezier(.03,.98,.52,.99)',\n                          }}\n                        >\n                          <div data-tilt className=\"thumbnail rounded\">\n                            \n                            <ProjectImg alt={title} filename={img} />\n                          \n                          </div>\n                        </Tilt>\n                      </a>\n                    </div>\n                  </Fade>\n                </Col>\n              </Row>\n            );\n          })}\n          <div>\n            <Link\n              to=\"../\"\n              className=\"cta-btn cta-btn--hero\"\n            >\n              Return to main page\n            </Link>\n          </div>\n        </div>\n      </Container>\n    </section>\n  );\n};\n\nexport default Projects;\n","import React, { useContext, useEffect, useState } from 'react';\nimport Fade from 'react-reveal/Fade';\nimport Tilt from 'react-tilt';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Link } from 'gatsby';\nimport PortfolioContext from '../../context/context';\nimport Title from '../Title/Title';\nimport AboutImg from '../Image/AboutImg';\nimport ProjectImg from '../Image/ProjectImg';\n\nconst About = () => {\n  const { projects } = useContext(PortfolioContext);\n  const { about } = useContext(PortfolioContext);\n  const { img, paragraphOne, paragraphTwo, paragraphThree, resume } = about;\n\n  const [isDesktop, setIsDesktop] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    if (window.innerWidth > 769) {\n      setIsDesktop(true);\n      setIsMobile(false);\n    } else {\n      setIsMobile(true);\n      setIsDesktop(false);\n    }\n  }, []);\n\n  return (\n    <section id=\"project_item\">\n      <Container>\n        <Title title={paragraphOne || ''} />\n        <Fade bottom={isDesktop} bottom={isMobile} duration={1000} delay={500} distance=\"30px\">\n          <p className=\"project_item__text\">{paragraphTwo || ''}</p>\n        </Fade>\n        <div className=\"project-wrapper\">\n          {projects.map((project) => {\n            const { title, info, info2, url, repo, img, id } = project;\n\n            return (\n              <Row key={id}>\n                <Col lg={4} sm={12}>\n                  <Fade\n                    left={isDesktop}\n                    bottom={isMobile}\n                    duration={1000}\n                    delay={500}\n                    distance=\"30px\"\n                  >\n                    <div className=\"project-wrapper__text\">\n                      <h1 className=\"project-wrapper__text-title\">{title || 'Project Title'}</h1>\n                      <div>\n                        <p>{info || ''}</p>\n                        <p className=\"mb-4\">{info2 || ''}</p>\n                      </div>\n                      {repo && (\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"cta-btn cta-btn--resume\"\n                          href={repo}\n                        >\n                          Source Code\n                        </a>\n                      )}\n                    </div>\n                  </Fade>\n                </Col>\n                <Col lg={8} sm={12}>\n                  <Fade\n                    right={isDesktop}\n                    bottom={isMobile}\n                    duration={1000}\n                    delay={1000}\n                    distance=\"30px\"\n                  >\n                    <div className=\"project-wrapper__image\">\n                      {/* <a\n                        href={url || '#!'}\n                        target=\"_blank\"\n                        aria-label=\"Project Link\"\n                        rel=\"noopener noreferrer\"\n                      > */}\n                      <Tilt\n                        options={{\n                          reverse: false,\n                          max: 8,\n                          perspective: 1000,\n                          scale: 1,\n                          speed: 300,\n                          transition: true,\n                          axis: null,\n                          reset: true,\n                          easing: 'cubic-bezier(.03,.98,.52,.99)',\n                        }}\n                      >\n                        <div data-tilt className=\"thumbnail rounded\">\n                          <ProjectImg alt={title} filename={img} />\n                        </div>\n                      </Tilt>\n                      {/* </a> */}\n                    </div>\n                  </Fade>\n                  <p>\n                    <h1 className=\"project-wrapper__text-title\">{''}</h1>\n                  </p>\n                </Col>\n              </Row>\n            );\n          })}\n        </div>\n      </Container>\n    </section>\n  );\n};\n\nexport default About;\n","import React, { useContext } from 'react';\n// import { Container } from 'react-bootstrap';\nimport { Link } from 'gatsby';\nimport PortfolioContext from '../../context/context';\nimport GithubButtons from '../GithubButtons/GithubButtons';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport { githubButtons } from '../../mock/data';\n\nconst Footer = () => {\n  const { footer } = useContext(PortfolioContext);\n  const { networks } = footer;\n  const { isEnabled } = githubButtons;\n\n  return (\n    <footer className=\"footer navbar-static-bottom\">\n      <Container>\n        <span className=\"back-to-top\">\n          <Link to=\"projects\" smooth duration={1000}>\n            <i className=\"fa fa-angle-up fa-2x\" aria-hidden=\"true\" />\n          </Link>\n        </span>\n\n        <Row>\n          <Col></Col>\n          <Col>\n            <div>\n              <Link to={'/'} className=\"cta-btn cta-btn--hero\">\n                Return to main page\n              </Link>\n              {/* <Link href=\"/\" className=\"cta-btn cta-btn--hero\">\n                Return to main page\n              </Link> */}\n            </div>\n          </Col>\n          <Col>\n            <div>\n              <Link to={'/projects'} className=\"cta-btn cta-btn--hero\">\n                Return to projects list\n              </Link>\n              {/* <Link href=\"/projects\" className=\"cta-btn cta-btn--hero\">\n                Return to projects list\n              </Link> */}\n            </div>\n          </Col>\n          <Col></Col>\n        </Row>\n\n        <div className=\"social-links\">\n          {networks &&\n            networks.map((network) => {\n              const { id, name, url } = network;\n              return (\n                <a\n                  key={id}\n                  href={url || 'https://mkiuur.github.io/Github-resume/'}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                  aria-label={name}\n                >\n                  <i className={`fa fa-${name || 'refresh'} fa-inverse`} />\n                </a>\n              );\n            })}\n        </div>\n        <hr />\n        {isEnabled && <GithubButtons />}\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { nanoid } from 'nanoid';\n\n// HEAD DATA\nexport const headData = {\n  title: 'Margaret Riese | Computer Engineer', // e.g: 'Name | Developer'\n  lang: 'en', // e.g: en, es, fr, jp\n  description: 'Margaret Riese Portfolio Website', // e.g: Welcome to my website\n};\n\n// // HERO DATA\nexport const heroData = {\n  title: '',\n  name: 'Margaret Riese',\n  subtitle: 'Computer Engineer',\n  cta: '',\n};\n\n// ABOUT DATA\nexport const aboutData = {\n  img: 'Work_Photo.jpg',\n  paragraphOne:\n  'Knights and Monsters',\n  paragraphTwo:\n  'Computer graphics systems I worked on to build towards creating my Knights and Monsters demonstration.',\n  paragraphThree: '',\n  resume: '', // if no resume, the button will not show up\n};\n\n// PROJECTS DATA\nexport const projectsData = [\n  {\n    id: nanoid(),\n    img: 'raster-images.gif',\n    title: 'Raster Images',\n    info:\n    'I built a handful of rasterization converters. Given a RGBA picture, the converters would be able to manually rotate, recolor, or perform a number of transformations on the image.',\n    info2:\n    'These functions are manually performed using a number of matrix transformations and manipulations of the RGB, HSL, or alpha values. ',\n    url: '',\n    repo: 'https://github.com/mkiuur/Knights-and-Monsters/tree/master/raster-images', // if no repo, the button will not show up\n  },\n  {\n    id: nanoid(),\n    img: 'casterImages.jpg',\n    title: 'Ray Casting',\n    info:\n    'The ray caster I built casts rays from the camera into the scene to judge depth and lighting. Combining the components or the casting vectors, the system determines the intersection point of the ray and any object in the scene within view.',\n    info2:\n    'For each pixel in the image, the system generated a ray and then, for each object in the scene, if the ray intersects the object, a pixel color is set. The system is inefficient and is improved upon in later parts of the project.',\n    url: '',\n    repo: 'https://github.com/mkiuur/Knights-and-Monsters/tree/master/ray-casting', // if no repo, the button will not show up\n  },\n  {\n    id: nanoid(),\n    img: 'sphere-and-plane.gif',\n    title: 'Ray Tracing',\n    info: 'The ray tracing system takes the intersection point from the ray caster and fires a new ray to each point or directional light source to determine how much the object is lit.',\n    info2: \"The system also calculates ambient lighting, diffuse lighting, specular reflection, and refraction based on the material of the object. These are combined in the Blinn Phong model.\",\n    url: '',\n    repo: 'https://github.com/mkiuur/Knights-and-Monsters/tree/master/ray-tracing', // if no repo, the button will not show up\n  },\n  {\n    id: nanoid(),\n    img: 'rubber-ducky-aabb-tree.jpg',\n    title: 'Bounding Volume Hierarchies',\n    info: 'I built a bounding box system to reduce the time taken to search for intersections during ray tracing. First all the objects are encapsulated in one large object oriented bounding box. ',\n    info2: \"Then the bounding box is filled with half the objects in the box recursively, duplicating objects that intersect more than one box. This allows objects to be searched for in O(logn) instead of O(n).\",\n    url: '',\n    repo: 'https://github.com/mkiuur/Knights-and-Monsters/tree/master/bounding-volume-hierarchy', // if no repo, the button will not show up\n  },\n  {\n    id: nanoid(),\n    img: 'bob-subdivision.gif',\n    title: 'Meshes',\n    info: 'To reduce storage size, I changed the triangle meshes from being stored as individual triangles to being stored as half edges. This takes up 1/3 of the original method.',\n    info2: \"I also implemented per-corner normals and a system to recursively subdivide surfaces of a mesh to create a smoother surface.\",\n    url: '',\n    repo: 'https://github.com/mkiuur/Knights-and-Monsters/tree/master/meshes', // if no repo, the button will not show up\n  },\n  {\n    id: nanoid(),\n    img: 'giphy 2.gif',\n    title: 'Shader Pipeline',\n    info: 'To further reduce space, I split the polygon into equal segments and average the colors to reduce the colors that need to be stored for a particular asset.',\n    info2: \"I also created a texture mapping system that would generate perlin noise with a random seed to reduce the amount of mesh complexity required in certain scenarios. I also made sure the shadow of the object reflected the new surface texture.\",\n    url: '',\n    repo: 'https://github.com/mkiuur/Knights-and-Monsters/tree/master/shader-pipeline', // if no repo, the button will not show up\n  },\n  {\n    id: nanoid(),\n    img: 'https://drive.google.com/file/d/1SvJnw3wrdw3bZ7VK9aGkerqgs1Tbqo6h/preview',\n    title: 'Kinematics',\n    info: 'Using inverse kinematics, I create a rotation and translation matrix for each bone and then recursively multiply the matrices from the origin of the movement to the base of the skeleton.',\n    info2: \"The mesh is deformable. Each point on the mesh is attached to multiple bones with weights that can be averaged to create a smooth deformation. \",\n    url: '',\n    repo: 'https://github.com/mkiuur/Knights-and-Monsters/tree/master/kinematics', // if no repo, the button will not show up\n  },\n  {\n    id: nanoid(),\n    img: 'flag.gif',\n    title: 'Mass Spring System',\n    info: 'Each point in the mesh is assigned a mass and an acceleration for an initial force and any external forces are added to this. e.g. gravity, wind',\n    info2: \"By recursively calculating the effects of other points in the mesh on a single point like a group of connected springs, the total movement can be calculated. The spring constants are assigned to simulate the intended material.\",\n    url: '',\n    repo: 'https://github.com/mkiuur/Knights-and-Monsters/tree/master/mass-spring-systems', // if no repo, the button will not show up\n  },\n];\n\n// CONTACT DATA\nexport const contactData = {\n  cta: 'mkiuur@gmail.com',\n  btn: \"Let's Talk\",\n  email: 'mkiuur@gmail.com',\n};\n\n// FOOTER DATA\nexport const footerData = {\n  networks: [\n    // {\n    //   id: nanoid(),\n    //   name: 'twitter',\n    //   url: '',\n    // },\n    // {\n    //   id: nanoid(),\n    //   name: 'codepen',\n    //   url: '',\n    // },\n    {\n      id: nanoid(),\n      name: 'linkedin',\n      url: 'https://www.linkedin.com/in/margaret-riese/',\n    },\n    {\n      id: nanoid(),\n      name: 'github',\n      url: 'https://github.com/mkiuur',\n    },\n  ],\n};\n\n// Github start/fork buttons\nexport const githubButtons = {\n  isEnabled: false, // set to false to disable the GitHub stars/fork buttons\n};\n","import React, { useState, useEffect } from 'react';\nimport Hero from './Hero/Hero';\nimport About from './About/About_Project_Item';\nimport Projects from './Projects/TestList';\nimport Contact from './Contact/Contact';\nimport Footer from './Footer/Footer_Project';\n\nimport { PortfolioProvider } from '../context/context';\n\nimport { heroData, aboutData, projectsData, contactData, footerData } from '../mock/knights_and_monsters_data';\n\nfunction App() {\n  const [hero, setHero] = useState({});\n  const [about, setAbout] = useState({});\n  const [projects, setProjects] = useState([]);\n  const [contact, setContact] = useState({});\n  const [footer, setFooter] = useState({});\n\n  useEffect(() => {\n    setHero({ ...heroData });\n    setAbout({ ...aboutData });\n    setProjects([...projectsData]);\n    setContact({ ...contactData });\n    setFooter({ ...footerData });\n  }, []);\n\n  return (\n    <PortfolioProvider value={{ hero, about, projects, contact, footer }}>\n      <About />\n      <Footer />\n    </PortfolioProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport App from '../components/App_Knights_and_Monsters';\nimport { headData } from '../mock/data';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../style/main.scss';\n\nexport default () => {\n  const { title, lang, description } = headData;\n\n  return (\n    <>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>{title || 'Margaret Riese Resume Site'}</title>\n        <html lang={lang || 'en'} />\n        <meta name=\"description\" content={description || 'Margaret Riese Resume Site'} />\n      </Helmet>\n      <App />\n    </>\n  );\n};\n"],"sourceRoot":""}